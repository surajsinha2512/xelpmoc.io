{"version":3,"sources":["components/Weather.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Weather","props","useState","country","setCountry","useEffect","console","log","data","url","axios","get","then","r","current","state","className","map","value","precip","temperature","src","weather_icons","style","align","height","width","wind_speed","Home","check","setCheck","showCountry","setShowCountry","places","setPlaces","placeholder","onChange","event","target","length","padding","borderRadius","onClick","evt","preventDefault","disabled","v","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRA0CeA,EAtCD,SAACC,GAAS,IAAD,EACIC,mBAAS,IADb,mBAChBC,EADgB,KACRC,EADQ,KAenB,OAXJC,qBAAU,WACNC,QAAQC,IAAIN,EAAMO,MACnB,IAAIC,EAAI,yFAAD,OAA0FR,EAAMO,MAC1GE,IAAMC,IAAIF,GAAKG,MAAK,SAACC,GACjB,OAAOA,EAAEL,QACVI,MAAK,SAACC,GACLP,QAAQC,IAAIM,EAAEC,SACdV,GAAW,SAAAW,GAAK,4BAAMA,GAAN,CAAYF,YAG9B,IAEM,mCACC,qBAAKG,UAAU,uBAAf,SACAb,EAAQc,KAAI,SAACC,GACV,OACG,qCAEA,sBAAKF,UAAU,MAAf,6BAAsCE,EAAMJ,QAAQK,UACpD,sBAAKH,UAAU,MAAf,2BAAoCE,EAAMJ,QAAQM,eAClD,qBAAKC,IAAKH,EAAMJ,QAAQQ,cAAeC,MAAO,CAACC,MAAM,OAAOC,OAAO,KAAKC,MAAM,QAC9E,sBAAKV,UAAU,MAAf,0BAAmCE,EAAMJ,QAAQa,cACjD,qBAAKX,UAAU,MAAf,SAAsBf,EAAMO,OAC5B,kCCgBAoB,EA5CJ,WAAK,IAAD,EACY1B,mBAAS,IADrB,mBACRC,EADQ,KACAC,EADA,OAEQF,oBAAS,GAFjB,mBAER2B,EAFQ,KAEFC,EAFE,OAGoB5B,oBAAS,GAH7B,mBAGR6B,EAHQ,KAGIC,EAHJ,OAIU9B,mBAAS,IAJnB,mBAIR+B,EAJQ,KAIDC,EAJC,KAaX,OACI,qCACA,qBAAKlB,UAAU,mBAAf,SACF,iCACA,mCAAOmB,YAAY,cAAcZ,MAAO,CAACG,MAAM,OAAQR,MAAOf,EAASiC,SAAU,SAACC,GAChFL,GAAe,GACc,IAA5BK,EAAMC,OAAOpB,MAAMqB,OACrBT,GAAS,GAGRA,GAAS,GAET1B,EAAWiC,EAAMC,OAAOpB,SAR1B,QAQ0C,CAAEQ,MAAO,MAAMc,QAAQ,MAAMC,aAAc,SACnF,wBAAQC,QApBG,SAACC,GAChBA,EAAIC,iBACJZ,GAAe,GACfE,GAAU,SAAAnB,GAAK,4BAAMA,GAAN,CAAYZ,QAiBQa,UAAU,sBAAsB6B,SAAUhB,EAAzE,kCAGAI,EAAOhB,KAAI,SAAC6B,GAEb,OACC,mCAECf,EAAa,cAAC,EAAD,CAASvB,KAAMsC,IAAK,cC1B3BC,MARf,WACE,OACE,qBAAK/B,UAAU,MAAf,SACA,cAAC,EAAD,OCMWgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtC,MAAK,YAAkD,IAA/CuC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.855c8f17.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport './apply.css';\r\n\r\nconst Weather=(props)=>{\r\nconst [country,setCountry]=useState([]);\r\n\r\n\r\nuseEffect(()=>{\r\n    console.log(props.data)\r\n   let url=`http://api.weatherstack.com/current?access_key=922be7ef63a20dd3876bf9a7d8b4e1e5&query=${props.data}`\r\naxios.get(url).then((r)=>{\r\n    return r.data;\r\n}).then((r)=>{\r\n    console.log(r.current);\r\n    setCountry(state=>[...state,r])\r\n   \r\n})\r\n},[])\r\n    return (\r\n        <>\r\n         <div className=\"flex-container inner\"> \r\n        {country.map((value)=>{\r\n            return(\r\n               <>\r\n              \r\n               <div className=\"row\">Precipitation : {value.current.precip}</div>\r\n               <div className=\"row\">temperature : {value.current.temperature}</div>\r\n               <img src={value.current.weather_icons} style={{align:\"left\",height:\"5%\",width:\"5%\"}}/> \r\n               <div className=\"row\">Wind Speed : {value.current.wind_speed}</div>\r\n               <div className=\"col\">{props.data}</div>\r\n               <br></br>\r\n               </>\r\n            )\r\n        })}\r\n\r\n         </div>\r\n        </>\r\n    )\r\n \r\n}\r\n\r\nexport default Weather;","import React,{useState} from 'react';\r\nimport Weather from './Weather'\r\n\r\nconst Home=()=>{\r\nconst [country,setCountry]=useState('');\r\nconst [check,setCheck]=useState(true);\r\nconst [showCountry,setShowCountry]=useState(false);\r\nconst [places,setPlaces]=useState([])\r\n\r\nconst clickHandler=(evt)=>{\r\n    evt.preventDefault();\r\n    setShowCountry(true);\r\n    setPlaces(state=>[...state,country])\r\n\r\n}\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container search\">\r\n      <form>\r\n      <input placeholder=\"Enter Place\" style={{width:\"20%\"}} value={country} onChange={(event)=>{\r\n        setShowCountry(false)\r\n      if(event.target.value.length===0){\r\n       setCheck(true)\r\n      }\r\n      else{\r\n        setCheck(false)\r\n      }\r\n        setCountry(event.target.value)}} style={{ width: \"60%\",padding:\"5px\",borderRadius: \"4px\"}}/>\r\n        <button onClick={clickHandler} className=\"btn btn-success m-5\" disabled={check} > Check Weather </button>\r\n        </form>\r\n        </div>\r\n       {places.map((v)=>{\r\n       // console.log(v)\r\n       return (\r\n        <>\r\n        \r\n        {showCountry? <Weather data={v}/>:null}\r\n        </>\r\n       )\r\n        \r\n       })}\r\n       {}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","import './App.css';\r\nimport Home from './components/Home';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n    <Home/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}